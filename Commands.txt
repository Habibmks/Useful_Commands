--Lock Screen (Win + L)
rundll32.exe user32.dll,LockWorkStation
rundll32.exe powrprof.dll,SetSuspendState Lock

--print svchost.exe with pid
tasklist /SVC /FI "IMAGENAME eq svchost.exe"

--ADUser Properties
Get-ADUser -Identity "USERNAME" -Properties *

--Get Registry Items
Get-ItemProperty -Path "Registry::HKEY_CURRENT_USER\Control Panel\Desktop"
Get-Item -Path "Registry::HKEY_CURRENT_USER\Control Panel\Desktop" | Select-Object -ExpandProperty Property
https://learn.microsoft.com/en-us/powershell/scripting/samples/working-with-registry-entries?view=powershell-7.4

--list installed applications
Get-AppxPackage -AllUsers | Where-Object Name -CNotLike "*Microsoft*" | Select-Object Name, PackageFullName
Get-WmiObject -Class Win32_Product| Where-Object Name -CNotLike "*Microsoft*"

--Windows defender realtime-protection status
This one shows the status 
Get-MpComputerStatus | Select-Object RealTimeProtectionEnabled
This one disables the realtime monitoring 
Set-MpPreference -DisableRealtimeMonitoring $true

--User list in Registry
Get-ItemProperty -Path "Registry::HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\ProfileList\*" | Where-Object -Property ProfileImagePath -clike "C:\Users\t*" | Select-Object -Property PSPath

--svchost services with PID and Description
tasklist /SVC /FI "IMAGENAME eq svchost.exe"

--powershell full history function
function hist { 
  $find = $args; 
  Write-Host "Finding in full history using {`$_ -like `"*$find*`"}"; 
  Get-Content (Get-PSReadlineOption).HistorySavePath | ? {$_ -like "*$find*"} | Get-Unique | more 
}

- create scheduled task via commandline
sc.exe create "Task Name" binpath= "FilePath" start=auto

on Ubuntu to change the default kernel
Edit the /etc/default/grub file: sudo nano /etc/default/grub
Change GRUB_DEFAULT=0 to GRUB_DEFAULT=saved
Add GRUB_SAVEDEFAULT=true
Update Grub with: sudo update-grub

on Ubuntu to install the new kernel
download and install linux-image-<linux_version>.deb
if it throws error install the dependencies like linux-modules-<linux_version>.deb

Ubuntu show users with sudo permission
cat /etc/group | grep sudo

Show Parent process with powershell - Before run it give desired process Id
$Id = 
Get-CimInstance Win32_Process -Filter "ProcessId = $Id" | ForEach-Object { 
  $Parent = Get-CimInstance Win32_Process -Filter "ProcessId = $($_.ParentProcessId)"
  [PSCustomObject]@{
    ProcessId = $_.ProcessId
    ProcessName = $_.ProcessName
    ParentId = $_.ParentProcessId
    ParentName = $Parent.ProcessName
  } | Format-List | Out-String
}
